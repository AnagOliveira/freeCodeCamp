/*var denom = [
	{ nome: 'CEM', val: 100},
	{ nome: 'VINTE', val: 20},
	{ nome: 'DEZ', val: 10},
	{ nome: 'CINCO', val: 5},
	{ nome: 'UM', val: 1},
	{ nome: 'QUARTER', val: 0.25},
	{ nome: 'DIME', val: 0.1},
	{ nome: 'NICKEL', val: 0.05},
	{ nome: 'PENNY', val: 0.01}
];

function checarCaixaRegistradora(preco, dinheiro, cid) {
 var saida = {status: null, mudando: []};
 var mudando = dinheiro - preco;
 var registro = cid.reduce(function(acc, curr) {
 acc.total += curr[1];
 acc[curr[0]] = curr[1];
 return acc;
 }, {total: 0});
 if(registro.total === mudando) {
 saida.status = 'FECHADO';
 saida.mudando = cid;
 return saida;
 }
 if(registro.total < mudando) {
 saida.status = 'FUNDOS_INSUFICIENTES';
 return saida;
 }
 var mudando_arr = denom.reduce(function(acc, curr) {
 var value = 0;
 while(registro[curr.nome] > 0 && mudando >= curr.val) {
 mudando -= curr.val;
 registro[curr.nome] -= curr.val;
 value += curr.val;
 mudando = Math.round(mudando * 100) / 100;
 }
 if(value > 0) {
 acc.push([ curr.nome, value ]);
 }
 return acc;
 }, []);
 if(mudando_arr.length < 1 || mudando > 0) {
 saida.status = 'FUNDOS_INSUFICIENTES';
 return saida;
 }
 saida.status = 'ABERTO';
 saida.mudando = mudando_arr;
 return saida;
} */

var denom = [
	{ name: 'ONE HUNDRED', val: 100},
	{ name: 'TWENTY', val: 20},
	{ name: 'TEN', val: 10},
	{ name: 'FIVE', val: 5},
	{ name: 'ONE', val: 1},
	{ name: 'QUARTER', val: 0.25},
	{ name: 'DIME', val: 0.1},
	{ name: 'NICKEL', val: 0.05},
	{ name: 'PENNY', val: 0.01}
];

function checkCashRegister(price, cash, cid) {
 var output = {status: null, change: []};
 var change = cash - price;
 var register = cid.reduce(function(acc, curr) {
 acc.total += curr[1];
 acc[curr[0]] = curr[1];
 return acc;
 }, {total: 0});
 if(register.total === change) {
 output.status = 'CLOSED';
 output.change = cid;
 return output;
 }
 if(register.total < change) {
 output.status = 'INSUFFICIENT_FUNDS';
 return output;
 }
 var change_arr = denom.reduce(function(acc, curr) {
 var value = 0;
 while(register[curr.name] > 0 && change >= curr.val) {
 change -= curr.val;
 register[curr.name] -= curr.val;
 value += curr.val;
 change = Math.round(change * 100) / 100;
 }
 if(value > 0) {
 acc.push([ curr.name, value ]);
 }
 return acc;
 }, []);
 if(change_arr.length < 1 || change > 0) {
 output.status = 'INSUFFICIENT_FUNDS';
 return output;
 }
 output.status = 'OPEN';
 output.change = change_arr;
 return output;
}
